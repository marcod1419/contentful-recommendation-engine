'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handler = exports.builder = exports.desc = exports.command = undefined;
exports.deleteExtension = deleteExtension;

var _context = require('../../context');

var _assertions = require('../../utils/assertions');

var _async = require('../../utils/async');

var _contentfulClients = require('../../utils/contentful-clients');

var _emojis = require('../../utils/emojis');

var _log = require('../../utils/log');

var _assertions2 = require('./utils/assertions');

const command = exports.command = 'delete';

const desc = exports.desc = 'Delete an extension';

const builder = exports.builder = yargs => {
  return yargs.option('id', { type: 'string', demand: true, describe: 'Extension id' }).option('management-token', { alias: 'mt', type: 'string', describe: 'Contentful management API token' }).option('space-id', { type: 'string', describe: 'Space id' }).option('environment-id', { type: 'string', describe: 'Environment id', default: 'master' }).option('version', {
    type: 'number',
    describe: 'Current version of the extension for optimistic locking'
  }).option('force', {
    type: 'boolean',
    describe: 'Force operation without explicit version'
  }).epilog('Copyright 2018 Contentful, this is a BETA release');
};

async function deleteExtension(argv) {
  await (0, _assertions.assertLoggedIn)(argv);
  await (0, _assertions.assertSpaceIdProvided)(argv);

  const { cmaToken, activeSpaceId } = await (0, _context.getContext)();
  const spaceId = argv.spaceId || activeSpaceId;
  const environmentId = argv.environmentId;

  const client = await (0, _contentfulClients.createManagementClient)({
    accessToken: argv.managementToken || cmaToken,
    feature: 'extension-delete'
  });

  const space = await client.getSpace(spaceId);
  const environment = await space.getEnvironment(environmentId);
  const extension = await environment.getUiExtension(argv.id);

  await (0, _assertions2.assertForceOrCorrectVersionProvided)(argv, extension.sys.version);

  await extension.delete();

  (0, _log.success)(`${_emojis.successEmoji} Successfully deleted extension with ID ${argv.id}`);
}

const handler = exports.handler = (0, _async.handleAsyncError)(deleteExtension);