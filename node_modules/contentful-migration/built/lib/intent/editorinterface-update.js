"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_intent_1 = require("./base-intent");
const editorinterface_update_1 = require("../action/editorinterface-update");
const chalk_1 = require("chalk");
const editorinterface_save_1 = require("../action/editorinterface-save");
class EditorInterfaceUpdateIntent extends base_intent_1.default {
    isEditorInterfaceUpdate() {
        return true;
    }
    groupsWith(other) {
        const sameContentType = other.getContentTypeId() === this.getContentTypeId();
        return (other.isEditorInterfaceCopy() ||
            other.isEditorInterfaceReset() ||
            other.isEditorInterfaceUpdate()) &&
            sameContentType;
    }
    endsGroup() {
        return false;
    }
    shouldSave() {
        return false;
    }
    shouldPublish() {
        return false;
    }
    toActions() {
        return [
            new editorinterface_update_1.UpdateEditorInterfaceAction(this.payload.contentTypeId, this.payload.editorInterface.fieldId, this.payload.editorInterface.widgetId, this.payload.editorInterface.settings),
            new editorinterface_save_1.SaveEditorInterfaceAction(this.payload.contentTypeId)
        ];
    }
    toPlanMessage() {
        const { fieldId, settings } = this.payload.editorInterface;
        let createDetails = [chalk_1.default `{italic widgetId}: "${this.payload.editorInterface.widgetId}"`];
        Object.keys(this.payload.editorInterface.settings).forEach(settingName => createDetails.push(chalk_1.default `{italic ${settingName}}: "${settings[settingName]}"`));
        return {
            heading: chalk_1.default `Update editor interface for Content Type {bold.yellow ${this.getContentTypeId()}}`,
            details: [],
            sections: [
                {
                    heading: chalk_1.default `Update field {yellow ${fieldId}}`,
                    details: createDetails
                }
            ]
        };
    }
}
exports.default = EditorInterfaceUpdateIntent;
//# sourceMappingURL=editorinterface-update.js.map