"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_intent_1 = require("./base-intent");
const editorinterface_reset_1 = require("../action/editorinterface-reset");
const chalk_1 = require("chalk");
const editorinterface_save_1 = require("../action/editorinterface-save");
class EditorInterfaceResetIntent extends base_intent_1.default {
    isEditorInterfaceReset() {
        return true;
    }
    groupsWith(other) {
        const sameContentType = other.getContentTypeId() === this.getContentTypeId();
        return (other.isEditorInterfaceCopy() ||
            other.isEditorInterfaceReset() ||
            other.isEditorInterfaceUpdate()) && sameContentType;
    }
    endsGroup() {
        return false;
    }
    shouldSave() {
        return false;
    }
    shouldPublish() {
        return false;
    }
    toActions() {
        return [
            new editorinterface_reset_1.ResetEditorInterfaceAction(this.payload.contentTypeId, this.payload.editorInterfaceReset.fieldId),
            new editorinterface_save_1.SaveEditorInterfaceAction(this.payload.contentTypeId)
        ];
    }
    toPlanMessage() {
        return {
            heading: chalk_1.default `Reset editor interface for Content Type {bold.yellow ${this.getContentTypeId()}}`,
            details: [],
            sections: []
        };
    }
}
exports.default = EditorInterfaceResetIntent;
//# sourceMappingURL=editorinterface-reset.js.map