"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AssetCard = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Card = _interopRequireDefault(require("../Card"));

var _Dropdown = _interopRequireDefault(require("../../Dropdown/Dropdown"));

var _Asset = _interopRequireDefault(require("../../Asset"));

var _Icon = _interopRequireDefault(require("../../Icon/Icon"));

var _TabFocusTrap = _interopRequireDefault(require("../../TabFocusTrap"));

var _Tag = _interopRequireDefault(require("../../Tag"));

var _AssetCardSkeleton = _interopRequireDefault(require("./AssetCardSkeleton"));

var styles = {
  "AssetCard": "AssetCard__AssetCard____VWXj",
  "AssetCard__asset": "AssetCard__AssetCard__asset___189id",
  "AssetCard__header": "AssetCard__AssetCard__header___2ahyT",
  "AssetCard__header__dropdown-button": "AssetCard__AssetCard__header__dropdown-button___i5hlk"
};

var AssetCard =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(AssetCard, _Component);

  function AssetCard() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, AssetCard);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(AssetCard)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      isOpen: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderDropdownListElements", function (dropdownListElements) {
      return _react.default.createElement(_Dropdown.default, {
        isOpen: _this.state.isOpen,
        onClose: function onClose() {
          return _this.setState({
            isOpen: false
          });
        },
        position: "bottom-right",
        toggleElement: _react.default.createElement("button", {
          type: "button",
          className: styles['AssetCard__header__dropdown-button'],
          onClick: function onClick() {
            return _this.setState(function (state) {
              return {
                isOpen: !state.isOpen
              };
            });
          }
        }, _react.default.createElement(_TabFocusTrap.default, null, _react.default.createElement(_Icon.default, {
          icon: "MoreHorizontalTrimmed",
          color: "secondary"
        })))
      }, dropdownListElements);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderStatus", function (status) {
      var label;
      var type;

      switch (status) {
        case 'archived':
          label = 'archived';
          type = 'negative';
          break;

        case 'changed':
          label = 'changed';
          type = 'primary';
          break;

        case 'published':
          label = 'published';
          type = 'positive';
          break;

        default:
          label = 'draft';
          type = 'warning';
      }

      return _react.default.createElement(_Tag.default, {
        tagType: type,
        style: {
          marginLeft: 'auto'
        }
      }, label);
    });
    return _this;
  }

  (0, _createClass2.default)(AssetCard, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          extraClassNames = _this$props.extraClassNames,
          src = _this$props.src,
          type = _this$props.type,
          title = _this$props.title,
          status = _this$props.status,
          isLoading = _this$props.isLoading,
          dropdownListElements = _this$props.dropdownListElements,
          testId = _this$props.testId,
          otherProps = (0, _objectWithoutProperties2.default)(_this$props, ["extraClassNames", "src", "type", "title", "status", "isLoading", "dropdownListElements", "testId"]);
      var classNames = (0, _classnames.default)(styles['AssetCard'], extraClassNames);
      return _react.default.createElement(_Card.default, (0, _extends2.default)({
        extraClassNames: classNames,
        title: title,
        testId: testId
      }, otherProps), isLoading ? _react.default.createElement(_AssetCardSkeleton.default, null) : _react.default.createElement("div", {
        className: styles['AssetCard__inner-wrapper']
      }, _react.default.createElement("div", {
        className: styles['AssetCard__header']
      }, status && this.renderStatus(status), dropdownListElements && this.renderDropdownListElements(dropdownListElements)), _react.default.createElement("div", {
        className: styles['AssetCard__content']
      }, _react.default.createElement(_Asset.default, {
        extraClassNames: styles['AssetCard__asset'],
        src: src,
        title: title,
        type: type
      }))));
    }
  }]);
  return AssetCard;
}(_react.Component);

exports.AssetCard = AssetCard;
AssetCard.displayName = "AssetCard";
(0, _defineProperty2.default)(AssetCard, "propTypes", {
  src: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  extraClassNames: _propTypes.default.string,
  isLoading: _propTypes.default.bool,
  dropdownListElements: _propTypes.default.node,
  status: _propTypes.default.oneOf(['archived', 'changed', 'draft', 'published']),
  testId: _propTypes.default.string,
  type: _propTypes.default.any
});
(0, _defineProperty2.default)(AssetCard, "defaultProps", {
  isLoading: false,
  testId: 'cf-ui-asset-card'
});
var _default = AssetCard;
exports.default = _default;