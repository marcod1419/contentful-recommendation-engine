import { Component, RefObject } from 'react';
export interface TextInputPropTypes {
    width?: 'small' | 'medium' | 'large' | 'full';
    type?: 'text' | 'password' | 'email' | 'number' | 'search' | 'url';
    name?: string;
    id?: string;
    extraClassNames?: string;
    withCopyButton?: boolean;
    placeholder?: string;
    onChange?: (...args: any[]) => any;
    disabled?: boolean;
    testId?: string;
    maxLength?: number;
    onBlur?: (...args: any[]) => any;
    onCopy?: (...args: any[]) => any;
    value?: string;
    inputRef?: RefObject<HTMLInputElement>;
    error?: boolean;
    required?: boolean;
}
export declare class TextInput extends Component<TextInputPropTypes> {
    static defaultProps: {
        name: any;
        id: any;
        extraClassNames: any;
        placeholder: any;
        withCopyButton: boolean;
        maxLength: any;
        onChange: any;
        onBlur: any;
        onCopy: any;
        testId: string;
        value: any;
        error: any;
        type: any;
        disabled: boolean;
        required: boolean;
        width: string;
    };
    state: {
        value: string;
    };
    componentWillReceiveProps(nextProps: any): void;
    handleFocus: (e: any) => void;
    render(): JSX.Element;
}
export default TextInput;
