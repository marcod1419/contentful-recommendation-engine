import React, { Component } from 'react';
import { ModalSizeType } from '../Modal/Modal';
export interface ModalConfirmProps {
    /**
     * When true, the dialog is shown.
     */
    isShown: boolean;
    /**
     * Function that will be called when the confirm button is clicked. This does not close the ModalConfirm.
     */
    onConfirm: Function;
    /**
     * Function that will be called when the cancel button is clicked. This does not close the ModalConfirm.
     */
    onCancel: Function;
    /**
        Modal title that is used in header
      */
    title?: string;
    /**
     * Label of the confirm button
     */
    confirmLabel?: string;
    /**
     * Label of the cancel button
     */
    cancelLabel?: string;
    /**
     * The intent of the ModalConfirm. Used for the Button.
     */
    intent?: 'primary' | 'positive' | 'negative';
    /**
        Size of the modal window
      */
    size?: ModalSizeType;
    /**
     * Boolean indicating if clicking the overlay should close the overlay.
     */
    shouldCloseOnOverlayClick?: boolean;
    /**
     * Boolean indicating if pressing the esc key should close the overlay.
     */
    shouldCloseOnEscapePress?: boolean;
    /**
     * When true, the confirm button is set to disabled.
     */
    isConfirmDisabled?: boolean;
    /**
     * When true, the confirm button is set to loading.
     */
    isConfirmLoading?: boolean;
    /**
        To disable word-wrapping of the modal title
      */
    isNotWrapped?: boolean;
    testId?: string;
    confirmTestId?: string;
    cancelTestId?: string;
    children: React.ReactNode;
}
export declare class ModalConfirm extends Component<ModalConfirmProps> {
    static defaultProps: {
        testId: string;
        confirmTestId: string;
        cancelTestId: string;
        title: string;
        confirmLabel: string;
        cancelLabel: string;
        intent: string;
        shouldCloseOnOverlayClick: boolean;
        shouldCloseOnEscapePress: boolean;
        isConfirmDisabled: boolean;
        isConfirmLoading: boolean;
        size: string;
    };
    render(): JSX.Element;
}
export default ModalConfirm;
