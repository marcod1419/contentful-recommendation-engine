"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Notification = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = require("react-dom");

var _NotificationsManager = _interopRequireDefault(require("./NotificationsManager"));

/* global Promise */
var initiated = false;
var internalAPI = {};

function registerAPI(fnName, fn) {
  internalAPI[fnName] = fn;
}

function createRoot(callback) {
  var container = document.createElement('div');
  document.body.appendChild(container);
  (0, _reactDom.render)(_react.default.createElement(_NotificationsManager.default, {
    register: registerAPI
  }), container, callback);
}

var afterInit = function afterInit(fn) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (!initiated) {
      initiated = true;
      return new Promise(function (resolve) {
        createRoot(function () {
          resolve(fn.apply(void 0, args));
        });
      });
    } else {
      return Promise.resolve(fn.apply(void 0, args));
    }
  };
};

var show = function show(intent) {
  return function (text, settings) {
    return internalAPI.show(text, (0, _objectSpread2.default)({}, settings || {}, {
      intent: intent
    }));
  };
};

var Notification = {
  success: afterInit(show('success')),
  error: afterInit(show('error')),
  warning: afterInit(show('warning')),
  close: afterInit(function (id) {
    return internalAPI.close(id);
  }),
  closeAll: afterInit(function () {
    return internalAPI.closeAll();
  }),
  setPosition: afterInit(function (position, params) {
    return internalAPI.setPosition(position, params);
  }),
  setDuration: afterInit(function (duration) {
    return internalAPI.setDuration(duration);
  })
};
exports.Notification = Notification;
var _default = Notification;
exports.default = _default;