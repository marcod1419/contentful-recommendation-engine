import React, { Component } from 'react';
export interface SelectProps {
    required?: boolean;
    children: React.ReactNode;
    name?: string;
    id?: string;
    hasError?: boolean;
    value?: string;
    isDisabled?: boolean;
    onChange?: (...args: any[]) => any;
    onBlur?: (...args: any[]) => any;
    testId?: string;
    onFocus?: (...args: any[]) => any;
    extraClassNames?: string;
    width?: 'auto' | 'small' | 'medium' | 'large' | 'full';
}
export interface SelectState {
    value?: string;
}
export declare class Select extends Component<SelectProps, SelectState> {
    static defaultProps: {
        testId: string;
        required: boolean;
        hasError: boolean;
        isDisabled: boolean;
        width: string;
        onBlur: () => void;
        onFocus: () => void;
        onChange: () => void;
    };
    state: {
        value: string;
    };
    componentWillReceiveProps(nextProps: any): void;
    render(): JSX.Element;
}
export default Select;
