import React, { Component } from 'react';
export declare type positionType = 'top' | 'right' | 'left' | 'bottom-left' | 'bottom-right' | 'top-right' | 'top-left';
export interface DropdownProps {
    extraClassNames?: string;
    children: React.ReactNode;
    toggleElement?: React.ReactNode;
    testId?: string;
    submenuToggleLabel?: string;
    position: positionType;
    isOpen: boolean;
    onClose: () => void;
}
export interface AnchorDimensionsAndPositonType {
    top: number;
    left: number;
    width: number;
    height: number;
}
export interface DropdownState {
    isOpen: boolean;
    position: positionType;
    anchorDimensionsAndPositon?: AnchorDimensionsAndPositonType;
}
export declare class Dropdown extends Component<DropdownProps, DropdownState> {
    static defaultProps: {
        testId: string;
        position: string;
        isOpen: boolean;
        onClose: () => void;
    };
    state: {
        isOpen: boolean;
        position: positionType;
        anchorDimensionsAndPositon: {
            top: number;
            left: number;
            height: number;
            width: number;
        };
    };
    dropdownAnchor: HTMLElement;
    componentDidMount(): void;
    setAnchorDimensions: () => void;
    componentWillReceiveProps(newProps: any): void;
    componentDidUpdate(prevProps: any): void;
    bindEventListeners: () => void;
    componentWillUnmount(): void;
    openMenu: (isOpen: any) => void;
    handleEscapeKey: (event: any) => void;
    openSubmenu: (isOpen: any) => void;
    render(): JSX.Element;
}
export default Dropdown;
